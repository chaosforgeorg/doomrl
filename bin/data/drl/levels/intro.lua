-- INTRO LEVEL ----------------------------------------------------------

register_level "intro"
{
	name  = "Phobos Base Entry",
	entry = "He started his journey on the surface of Phobos.",

	Create = function ()
		level:fill( "rock" )


		local translation = {
			['.'] = "rock",
			[','] = "floor",
			['#'] = "wall",
			['+'] = "door",
			['>'] = "stairs",
			['P'] = { "floor" },
			['1'] = { "floor", being = "former" },
			['H'] = { "floor", being = "sergeant" },
			['2'] = { "floor", being = core.ifdiff( 2, "former" ) },
			['3'] = { "floor", being = core.ifdiff( 3, "former" ) },
			['4'] = { "floor", being = core.ifdiff( 4, "sergeant" ) or core.ifdiff( 3, "former" ) },
			['*'] = { "floor", item = "smed" },
		}

		if CHALLENGE ~= "" and chal[CHALLENGE].entryitem then
			translation["P"].item = chal[CHALLENGE].entryitem
		elseif DIFFICULTY > 3 then
			translation["P"].item = "garmor"
		end

		local proto_key = {
	A = { [[
...,,,,,,,,,,..
.,,,....,,,,,,,
,,,,,,,,,,,,,,,
..,,,,,,,,,,,,,
,,,,,,,,,,,####
..,,##,,,,3#*,4
.,,,##,,,,##,,,
..,,,,,,,,,+,,,
..,,##,,,,##,,,
...,##,,,,3#*,4
.........,,####
............,,,
..............,
...............
...............
]],[[
...,,,,,,,,,,..
.,,,....,,,,,,,
,,,,,,,,,,,,,,,
..,,,,,,,,,,,,,
,,,,###########
..,,##,,3,,#*,4
.,,,,,,,,,,#,,,
..,,,,,,,,,+,,,
..,,,,,,,,,#,,,
...,##,,3,,#*,4
....###########
............,,,
..............,
...............
...............
]] },
	B = { [[
...,,,,,,,,,,,,
,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,
########,,,,,,,
#,,,,,2########
+,,,,,,+,1,,,,#
#,,,,,,#,,,,,,#
########,,,,1,+
#,,,,,,#,,,,,,#
+,,,,,,+,1,,,,#
#,,,,,2########
########,,,,,,,
,,,,,,,,,,,,,,,
..,,,,.....,,,,
...............
]],[[
...,,,,,,,,,,,,
,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,
###############
#,,,,,2#,,,,,,#
#,,,,,,+,1,,,,#
+,,,,,,#,,,,,,#
########,,,,1,+
+,,,,,,#,,,,,,#
#,,,,,,+,1,,,,#
#,,,,,2#,,,,,,#
###############
,,,,,,,,,,,,,,,
..,,,,.....,,,,
...............
]] },
	C = { [[
,..............
,,,,..,,,,.....
,,,,,,,,.......
,,,,,,,........
,,,,,.,,,......
#######,,,.....
,,,,,,#,,,.....
,,PH>,#,.......
,,,,,,#,,,.....
#######,,......
,,,,,,,,,......
,,,,,,,........
,,,,,..........
,..............
...............
]],[[
,..............
,,,,..,,,,.....
,,,,,,,,.......
,#####,........
##,,,##,,......
,,,,,,##,,.....
,,,,,,,#,,.....
,,PH>,,#.......
,,,,,,,#,,.....
,,,,,,,#,......
##,,,###,......
,#####,........
,,,,,..........
,..............
...............
]]
}
}
		local proto_map = "ABC"
		local tilesets = {[[
...........,,,,,,,,,,,,.....,,,,,,,,,,,,,..............
.....,,,,,,,,,....,,,,,,,,,,,,,,,,,,,,,,,,,,..,,,,.....
..,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.......
.,,,,,,,,,,,,,,,,,,,,,,,,,#######,,,,,,,,,,,,,,........
..,,,,...,,,,,,,,,,,,######,,,,2########,,,,,.,,,......
...,,,,,,,,,,,##,,,,3#*,,4#,,,,,+,1,,,,#######,,,,.....
....,,,,,,,,,,##,,,,,#,,,,+,,,,,#,,,,,,#,,,,,#.,,,.....
......,,,...,,,,,,,,,+,,,,#######,,,,1,+,,PH>#,,.......
...,,,,,,,,,,,##,,,,,#,,,,+,,,,,#,,,,,,#,,,,,#,,,,.....
....,,,,,,,,,,##,,,,3#*,,4#,,,,,+,1,,,,#######,,,......
....,,,,,,,,,,,....,,######,,,,2########,,,,,,,,,......
......................,,,,#######,,,,,,,,,,,,,,........
........................,,,,,,,,,,,,,,,,,,,,,..........
...........................,,,,.....,,,,,..............
.......................................................
]],[[
.......................................................
..........##,,,,,,,.........,,,,,,,,,,,,,.##...........
.....,,,,,##################################..,,,,.....
..,,,,,,,,3#,,,,,*#,,,,,,,,#,,,,,,#,,,,,,,#,,,,,.......
.,,,,,,,,,,#,,4,,,+,,,,,,,,+,,,,,,+,,,,,1,#,,,,........
..,,,,,,,,,#,,,,,,#,,,,,,,,#,,,,,,#,,,,,,,#,,,,,,......
...,,,,,,,,#,,,,,,#,,,,2,,,#,,,,,,##+######,,,,,,,.....
....,,,,,,,+,,,,,,##########,,1,,,#,,,,P>H#,,,,,,,.....
......,,,,,#,,,,,,#,,,,2,,,#,,,,,,##+######,,,,,.......
...,,,,,,,,#,,,,,,#,,,,,,,,#,,,,,,#,,,,,,,#,,,,,,,.....
....,,,,,,,#,,4,,,+,,,,,,,,+,,,,,,+,,,,,1,#,,,,,,......
....,,,,,,3#,,,,,*#,,,,,,,,#,,,,,,#,,,,,,,#,,,,,,......
..........##################################,,,........
..........##..,,,.......,,,,,,,,,,,,,,,,,,##,..........
...........................,,,,.....,,,,,..............
]],[[
.......................................................
........................,,,,,,,,,,,,,,,,,..............
.....,,,,,,,,,...,,,,,,,,,########,,,,,,,,,,..,,,,.....
..,,,,,,,,,,,,,,,,,########,,,,,2########,,,,,,,.......
.,,,,,,,,,,,,,,,,,3#,,,,,,+,,,,,,+,,,,,1#,,,,,,........
..,,,,,,,,,,,,,#####+######,,,,,,######+#####,,,,......
...,,,,,,,,,,,,#*,,4,,,,,,########,,,,,,,,,,#,,,,,.....
....,,,,,,,,,,,+,,,,,,,,,,#>HP,,,+,,,,,,,,,1#,,,,,.....
......,,,,,,,,,#*,,4,,,,,,########,,,,,,,,,,#,,,.......
...,,,,,,,,,,,,#####+######,,,,,,######+#####,,,,,.....
....,,,,,,,,,,,,,,3#,,,,,,+,,,,,,+,,,,,1#,,,,,,,,......
....,,,,,,,,,,,.,,,########,,,,,2########,,,,,,,,......
.................,,,,,,,,,########,,,,,,,,,,,,,........
........................,,,,,,,,,,,,,,,,,,,,,..........
...........................,,,,.....,,,,,..............
]],[[
.......................................................
............................,,,,,,,,,,,,,..............
.....,,,,,,,,,....,,,,,,,,,,,########,,,,,,,..,,,,.....
..,,,,,,,,,,,,,,,,,,,#########,,,,,,#,,,,,,,,,,,.......
.,,,,,,,,,,,,,,,,,,,3#,,,,,,,+,,,,,1#,,,,,,,,,,........
..,,,,,,,,,,,,,#######,,,,,,2#,,###+####,,,,,,,,,......
...,,,,,,,,,,,,#*,,4,#,,,########,,,,,,#,,,,,,,,,,.....
....,,,,,,,,,,,+,,,,,+,,,#>HP,,,+,,,,,1#,,,,,,,,,,.....
......,,,,,,,,,#*,,4,#,,,########,,,,,,#,,,,,,,,.......
...,,,,,,,,,,,,#######,,,,,,2#,,###+####,,,,,,,,,,.....
....,,,,,,,,,,,,,,,,3#,,,,,,,+,,,,,1#,,,,,,,,,,,,......
....,,,,,,,,,,,....,,#########,,,,,,#,,,,,,,,,,,,......
......................,,,,,,,########,,,,,,,,,,........
........................,,,,,,,,,,,,,,,,,,,,,..........
...........................,,,,.....,,,,,..............
]]}
		if math.random(2) == 1 then
			generator.place_tile( translation, tilesets[math.random(#tilesets)], 9, 3 )
		else
			generator.place_proto_map( coord( 12, 3 ), proto_map, proto_key, translation )
		end
		generator.scatter_item( area.FULL:shrinked(3),"rock","tree", 20)
		for c in area.around( coord( 4, 10 ), 3 )() do
			level:try_destroy_item( c )
		end

		level:player(4,10)
	end,

	OnTick = function ()
		if CHALLENGE == "" then
			-- XXX Can we discover the actual key registered for the action?
			ui.set_hint("")
			local p = player.position
			
			if p.x < 14 then
				if ui.is_pad() then
					ui.set_hint("Hint : hold left joy for direction, press <{!A}> to confirm move!")
				else
					ui.set_hint("Hint : use {!numpad} or {!arrows} to move around!")
				end
			elseif p.x < 20 then
				ui.set_hint("Hint : press <{!{$input_menu}}> for menu and {!Help}!")
			elseif p.x < 25 then
				ui.set_hint("Hint : you can turn off hints in the {!Settings} menu!")
			end
			if player.exp < 30  and player.enemiesinvision > 0 then
				ui.set_hint("Hint : press <{!{$input_fire}}> to fire your weapon!")
			end
			if player.eq.weapon and player.eq.weapon.ammo == 0 then
				ui.set_hint("Hint : press <{!{$input_reload}}> to reload your weapon!")
			end
			local item = level:get_item(p)
			if item then
				ui.set_hint("Hint : press <{!{$input_pickup}}> to get items from the ground!")
			end
			local tile = cells[ level:get_cell( p ) ].id
			if tile == "stairs" then
				ui.set_hint("Hint : press <{!{$input_action}}> to move downstairs!")
			end
		end
	end,
	OnExit = function ()
		ui.set_hint("")
	end,

}
